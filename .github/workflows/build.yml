name: Deploy Main
on:
  release:
    types: [published]
jobs:
  deploy-pypi:
    runs-on: ubuntu-latest
    environment: deployment
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          fetch-tags: true

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          cache: 'pip'
          cache-dependency-path: |
            **/setup.py
            **/requirements*.txt
          python-version: "3.12"

      - name: Install Twine
        run: sudo pip install twine

      - name: Create the distribution
        run: |
          sudo python setup.py sdist bdist_wheel

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  deploy-conda:
    runs-on: ubuntu-latest
    # sets default shell to remove need for source to run the conda shell
    defaults:
      run:
        shell: bash -l {0}
    environment: deployment
    env:
      NUMPY_VERSION: "1.22.0"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          fetch-tags: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # Much better than manual installation, original version Miniconda2-4.7.10-Linux-x86_64.sh is broken
      - name: Install Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: true
          activate-environment: ""
          miniconda-version: "latest"

      - name: Install the Conda Dependencies
        run: |
          conda config --set always_yes yes --set auto_update_conda false
          conda install conda=24.1.2
          conda install -n base conda-libmamba-solver
          conda install python=3.12 conda-build colorama pip ruamel ruamel.yaml rich jsonschema -c conda-forge
          pip install -e .

      # echo yes before login to prevent anaconda bug breaking automation
      # git tags MUST be fetched otherwise output will be blank
      # bash variables cannot be used in github actions, must use actions specific syntax and methods
      # channels need to be specified on build and are saved in the package for installs
      - name: Build the Anaconda Package
        id: condabuild
        run: |
          conda install anaconda-client
          conda config --set anaconda_upload no --set solver libmamba
          export VERSION_FROM_GIT_TAG=$(git tag --list "v*[0-9]" --sort=version:refname | tail -1 | cut -c 2-)
          conda build . -c mosek -c anaconda -c pvlib -c slacgismo -c conda-forge --numpy '${NUMPY_VERSION}'
          echo "$VERSION_FROM_GIT_TAG" >> $GITHUB_OUTPUT

      - name: publish-to-conda
        uses: fcakyon/conda-publish-action@v1.3
        with:
          subdir: 'conda'
          anacondatoken: ${{ secrets.ANACONDA_TOKEN }}
          platforms: 'noarch'

      - name: Upload the Anaconda Package
        id: condaload
        run: |
          anaconda upload -u slacgismo  /usr/share/miniconda3/conda-bld/noarch/solar-data-tools-${{ steps.condabuild.outputs.gitversion }}-*.tar.bz2
